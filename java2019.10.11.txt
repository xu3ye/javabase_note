1.文件的读取和写入（文件字节流）
	读取：
		public String test_FileInputStream(String str) {
		try {
			FileInputStream fis = new FileInputStream(str);
			byte[] by = new byte[100];
			int len = 0;
			//fis.read(by);//返回的是读取数据的长度
			while( (len = fis.read(by)) != -1) {
				return new String(by,0,len);//第一个参数写的缓冲数组，第二个参数写的是从数组哪个位置开始，获取的数组的总长度
			}
			fis.close();
		}catch(Exception e){
			e.printStackTrace();	
		}
		return "错误";
	}
	写入：
		public void test_FileOutputStream(String str,String strr){
		try {
			FileOutputStream fos = new FileOutputStream(str);
			fos.write(strr.getBytes());//把数据写入内存，里面需要传byte数据，所以用getBytes转化
			fos.flush();//把数据刷写到硬盘，表示强制将缓冲区中的数据发送出去，不必等到缓冲区满
			fos.close();
			
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	复制文件：
		public static void test(String str1,String str2) {
		try {
			FileInputStream fis = new FileInputStream(str1);
			FileOutputStream fos = new FileOutputStream(str2);
			byte by[] = new byte[1000];//字节流
			int len = 0;
			while( (len = fis.read(by)) != -1 ) {//read()里面记得一定要带参数！！！
				fos.write(by,0,len);
			}
			fos.flush();
			fos.close();
			fis.close();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
2.文件字符流（只适合操作字符型数据文件）
	创建临时数组为字符型,其他和字节流差不多（FileReader,FileWriter）：
		1.建立一个流对象，将已存在的一个文件加载进流
			FileReader fr = new FileReader("test.txt");
		2.创建一个临时存放数据的数组
			char [] ch = new char[1024];
		3.调用流对象的读取方法将流中数据读取到数组中
			fr.read(ch);
3.这些是计算机与硬盘之间发生的IO操作，速度收到硬盘读写速度的制约